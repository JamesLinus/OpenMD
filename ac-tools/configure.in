dnl **** Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(OOPSE, 3.0, gezelter@nd.edu, oopse)
AC_CONFIG_AUX_DIR(ac-tools)
AC_CONFIG_SRCDIR([src/applications/oopse/oopse.cpp])
AC_CONFIG_HEADER([src/config.h])

builtin(include, ac-tools/aclocal.m4)
builtin(include, ac-tools/AC_CXX_HAVE_STL.m4)
builtin(include, ac-tools/AC_CXX_NAMESPACES.m4)
builtin(include, ac-tools/AC_CXX_STD.m4)

# who am i
AC_CANONICAL_HOST

AC_PREFIX_DEFAULT("/usr/local")

# set program name
PROGNAME="oopse"
AC_SUBST(PROGNAME)

AC_EXEEXT
AC_OBJEXT
OBJEXT=".$OBJEXT"

OOPSE=oopse

dnl **** define home dir of oopse
if test "x${prefix}" = "xNONE"
then
  OOPSE_HOME=${ac_default_prefix}/oopse
else
  OOPSE_HOME=${prefix}/oopse
fi
AC_ARG_ENABLE(oopse-home,
[  --enable-oopse-home=DIR      define oopse home dir [PREFIX/oopse]],
[OOPSE_HOME="${enableval}"])

# there are two ways to do debugging.  One with the --enable-debug flag
# and one using the DEBUG environment variable

debug=0
AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug], [Compile OOPSE in debug mode]), [debug=1])
if test "${DEBUG}"; then
	AC_DEFINE(debug, 1, [Code compiled in debug mode])
  msg="$msg, debug mode"
fi
AC_SUBST(debug)

# Checks for programs.
AC_PROG_CXX([icpc icc pgCC pathCC c++ xlc++ xlC g++ CC])
AC_PROG_CC([icc pgcc pathcc cc xlc gcc])
AC_PROG_FC([ifort ifc pgf95 pathf95 xlf95 lf95 epcf90 pathf90 xlf90 f95 f90 gfortran g95 fort], 95)
AC_PROG_CPP
AC_PROG_EGREP
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AX_SYS_PERLSHARPBANG
AC_PROG_INSTALL
case "x$INSTALL" in
   x/*) ;;
   *) INSTALL=`pwd`/ac-tools/"shtool install -c" ;
esac
MKINSTALLDIRS=`pwd`/ac-tools/"shtool mkdir -p -f"
AC_CHECK_PROG(AR, ar, ar, NONE)
if test "$AR" = "NONE"; then
  AC_MSG_ERROR(--> Can't find \`ar'!)
  AC_CACHE_SAVE
  exit 1
fi
AC_PATH_PROG(PS, ps)
AC_CACHE_CHECK([for POSIX or BSD ps syntax], ac_cv_prog_ps_syntax, [
	if $PS ax -o rss > /dev/null 2>&1; then
		ac_cv_prog_ps_ax=yes
	else
		ac_cv_prog_ps_ax=no
	fi
	if $PS -ef -o rss > /dev/null 2>&1; then
		ac_cv_prog_ps_ef=yes
	else
		ac_cv_prog_ps_ef=no
	fi
	if test "$ac_cv_prog_ps_ax" = yes; then
		ac_cv_prog_ps_syntax=BSD
        else
		if test "$ac_cv_prog_ps_ef" = yes; then
			ac_cv_prog_ps_syntax=POSIX
		else
			AC_MSG_ERROR(Could not determine ps syntax)
		fi
	fi
])
AC_DEFINE_UNQUOTED(PSCOMMAND, $PS, [Path to ps program])
if test "$ac_cv_prog_ps_syntax" = BSD; then
  AC_DEFINE(PSTYPE_IS_BSD, 1, [ps uses BSD-style arguments])
else
   if test "$ac_cv_prog_ps_syntax" = POSIX; then
       AC_DEFINE(PSTYPE_IS_POSIX, 1, [ps uses POSIX-style arguments])
   else
       AC_MSG_ERROR(Unknown ps syntax type!)
   fi
fi

AC_LANG_PUSH(Fortran)
AC_FC_SRCEXT(F90)
dnl Check the flag for Fortran90 preprocessing
ACX_PROG_F90_PREPFLAG
dnl Check to see if a flag is required for preprocessing defines
ACX_PROG_F90_PREPDEFFLAG
AC_FC_WRAPPERS
AC_SUBST(FC_FUNC)
AC_SUBST(FC_FUNC_)
AC_FC_LIBRARY_LDFLAGS
dnl Fortran 90 module suffix
AC_CHECK_MODSUFFIX
dnl Fortran 90 module path specifier
AC_CHECK_MODDIRFLAG
AC_F90_MODULE_NAMES
pat=`echo $ac_cv_f90_module_names | sed 's/.*\(%.*%\).*/\1/'`
F90_MODULE_NAMES=empty
case $pat in
       %MODULE%)
          F90_MODULE_NAMES=UPPER ;;
       %Module%)
          F90_MODULE_NAMES=Mixed ;;
       %module%)
          F90_MODULE_NAMES=lower ;;
       *)
          F90_MODULE_NAMES=unknown ;;
esac
AC_SUBST(F90_MODULE_NAMES)
AC_LANG_POP

AC_LANG_C

dnl Checks for libraries.
AC_CHECK_LIB(m, asin, , exit)
ACX_CHECK_ZLIB

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([conio.h dlfcn.h fstream.h iostream.h libintl.h limits.h machine/hal_sysinfo.h math.h stddef.h stdio.h stdlib.h string.h strings.h strstream.h sys/param.h sys/pstat.h sys/sysmp.h sys/sysctl.h sys/sysinfo.h sys/systemcfg.h sys/table.h sys/time.h time.h unistd.h zlib.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_CHECK_TYPES(clock_t)
AC_C_CONST
AC_C_INLINE

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STRFTIME
AC_FUNC_STRTOD
AC_CHECK_FUNCS([floor getpagesize gettimeofday memchr memmove memset pow pstat_getdynamic pstat_getstatic rint select snprintf sranddev sqrt strcasecmp strchr strdup stricmp strncasecmp strnicmp strrchr strstr strtol sysmp getsysinfo sysctl table])

# special check for _system_configuration because AIX <4.3.2 do not
# contain the `physmem' member.
AC_MSG_CHECKING([for external symbol _system_configuration])
AC_TRY_COMPILE([#include <sys/systemcfg.h>],
               [double x = _system_configuration.physmem;],
  [AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE__SYSTEM_CONFIGURATION, 1,
            [Define if you have the _system_configuration variable.])],
  [AC_MSG_RESULT([no])])

dnl check for system getopt
adl_FUNC_GETOPT_LONG

AC_LANG_CPLUSPLUS
AC_CXX_NAMESPACES
AC_CXX_STD
AC_CHECK_HEADERS([ctype.h iostream fstream sstream strstream])
# AC_CPP_FUNC
# ------------------ #
# Checks to see if ANSI C99 CPP variable __func__ works.
# If not, perhaps __FUNCTION__ works instead. 
# If not, we'll just define __func__ to "". 
AC_DEFUN([AC_CPP_FUNC],
[AC_REQUIRE([AC_PROG_CC_STDC])dnl
AC_CACHE_CHECK([for an ANSI C99-conforming __func__], ac_cv_cpp_func,
[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],
[[const char *foo = __func__;]])],
  [ac_cv_cpp_func=yes], 
  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],
[[const char *foo = __FUNCTION__;]])],
  [ac_cv_cpp_func=__FUNCTION__], 
  [ac_cv_cpp_func=no])])])
if test $ac_cv_cpp_func = __FUNCTION__; then
  AC_DEFINE(__func__,__FUNCTION__,
            [Define to __FUNCTION__ or "" if `__func__' does not conform to 
ANSI C.])
elif test $ac_cv_cpp_func = no; then
  AC_DEFINE(__func__,"",
            [Define to __FUNCTION__ or "" if `__func__' does not conform to 
ANSI C.])
fi
])# AC_CPP_FUNC

AC_CPP_FUNC
AC_SUBST(__func__)


dnl check for strong optimization options

case $debug in
  1) 
     ;;
  *) 
   ACX_PROG_FC_MAXOPT
   ACX_PROG_CC_MAXOPT
   ACX_PROG_CXX_MAXOPT
     ;;
esac

dnl OpenBabel needs this:
AC_DEFINE([OBAPI], [], [Used to export symbols for DLL / shared library builds])


AC_ARG_WITH(mpi,
    	[AC_HELP_STRING([--with-mpi=<prefix>],
		[compile with MPI installed in <prefix> [default=no]])],
	with_mpi=$withval,
	with_mpi="no")

case "x$with_mpi" in
        xyes | "x")  USE_MPI=yes;;
        xno) USE_MPI=no ;;
        *) MPI="$with_mpi"; USE_MPI=yes ;; 
esac 
if test "$USE_MPI" = "yes" -a -z "$with_mpi"; then 
	MPI="/usr/local" 
fi 
if test "$USE_MPI" = "yes"; then
        ACX_MPI
fi
AC_SUBST(USE_MPI)

dnl ########################################
dnl # Check for CGAL headers and libraries #
dnl ########################################

USE_CGAL=no
cgal_makefile=auto
AC_ARG_WITH(cgal-makefile,[  --with-cgal-makefile=FILE  CGAL makefile that should be used],       cgal_makefile="$withval")

if test "x$cgal_makefile" != xno; then

  if test "x$cgal_makefile" = xauto -a "x$CGAL_MAKEFILE" != x; then
    cgal_makefile="$CGAL_MAKEFILE"
  fi

  AC_MSG_CHECKING(for cgal_makefile: $cgal_makefile)

  if test -f "$cgal_makefile"; then

    cat >config.tmp.Makefile <<EOF
include $cgal_makefile
default:
	@echo CGAL_OS_COMPILER=\"\${CGAL_OS_COMPILER}\" >config.tmp.cgalvariables
	@echo CGAL_INCLDIR=\"\${CGAL_INCL_DIR}\" >>config.tmp.cgalvariables
	@echo CGAL_INCLCONFDIR=\"\${CGAL_INCL_CONF_DIR}\" >>config.tmp.cgalvariables
	@echo CGAL_LIBDIR=\"\${CGAL_LIB_DIR}/\${CGAL_OS_COMPILER}\" >>config.tmp.cgalvariables
	@echo CGAL_RLIBDIR=\"\${CGAL_LIB_DIR}/\${CGAL_OS_COMPILER}\" >>config.tmp.cgalvariables
	@echo CGAL_CXXFLAGS=\"\${CGAL_CXXFLAGS}\" >>config.tmp.cgalvariables
	@echo GMP_INCLDIR=\"\${GMP_INCL_DIR}\" >>config.tmp.cgalvariables
	@echo GMP_LIBDIR=\"\${GMP_LIB_DIR}\" >>config.tmp.cgalvariables
	@echo GMP_RLIBDIR=\"\${GMP_LIB_DIR}\" >>config.tmp.cgalvariables
	@echo LEDA_INCLDIR=\"\${LEDA_INCL_DIR}\" >>config.tmp.cgalvariables
	@echo LEDA_LIBDIR=\"\${LEDA_LIB_DIR}\" >>config.tmp.cgalvariables
	@echo LEDA_RLIBDIR=\"\${LEDA_LIB_DIR}\" >>config.tmp.cgalvariables
EOF

    make -s -f config.tmp.Makefile
    . config.tmp.cgalvariables

    rm -f config.tmp.Makefile config.tmp.cgalvariables

    if test "x$CGAL_INCLDIR" = "x"; then
      CGAL_INCLDIR=""
    fi

    if test "x$CGAL_LIBDIR" = "x"; then
      CGAL_LIBDIR=""
    fi

    if test "x$CGAL_RLIBDIR" = "x"; then
      CGAL_RLIBDIR=""
    fi

    if test "x$LEDA_INCLDIR" = "x"; then
      LEDA_INCLDIR=""
    fi

    if test "x$LEDA_LIBDIR" = "x"; then
      LEDA_LIBDIR=""
    fi

    if test "x$LEDA_RLIBDIR" = "x"; then
      LEDA_RLIBDIR=""
    fi

    if test "x$GMP_INCLDIR" = "x"; then
      GMP_INCLDIR=""
    fi

    if test "x$GMP_LIBDIR" = "x"; then
      GMP_LIBDIR=""
    fi

    if test "x$GMP_RLIBDIR" = "x"; then
      GMP_RLIBDIR=""
    fi

    AC_MSG_RESULT(CGAL_OS_COMPILER=   $CGAL_OS_COMPILER)
    AC_MSG_RESULT(CGAL_INCLDIR=       $CGAL_INCLDIR)
    AC_MSG_RESULT(CGAL_INCLCONFDIR=   $CGAL_INCLCONFDIR)
    AC_MSG_RESULT(CGAL_LIBDIR=        $CGAL_LIBDIR)
    AC_MSG_RESULT(CGAL_CXXFLAGS=      $CGAL_CXXFLAGS)
    AC_MSG_RESULT(LEDA_INCLDIR=       $LEDA_INCLDIR)
    AC_MSG_RESULT(LEDA_LIBDIR=        $LEDA_LIBDIR)
    AC_MSG_RESULT(GMP_INCLDIR=        $GMP_INCLDIR)
    AC_MSG_RESULT(GMP_LIBDIR=         $GMP_LIBDIR)

    AC_LANG_PUSH(C++)
    save_CXXFLAGS="$CXXFLAGS"
    CXXFLAGS="$CXXFLAGS -I$CGAL_INCLDIR -I$CGAL_INCLCONFDIR"
    AC_CHECK_HEADER(CGAL/Cartesian.h, cgal=yes, cgal=no)
    CXXFLAGS="$save_CXXFLAGS"

    if test "x$cgal" = xyes; then
      AC_MSG_CHECKING([for CGAL version])
      LOCATION=${CGAL_INCLDIR}
      LOCATION=${LOCATION:-/usr/include}
      if test -f $LOCATION/CGAL/version.h; then
        CGAL_VERSION=`grep '#define.*\<CGAL_VERSION\>.*' $LOCATION/CGAL/version.h | sed 's/[^0-9\.]*//g'`
      else
        CGAL_VERSION=`grep '#define.*\<CGAL_VERSION\>.*' $LOCATION/CGAL/config.h | sed 's/[^0-9\.]*//g'`
      fi
changequote({, })dnl
      if echo $CGAL_VERSION | grep -q "^[3456789]"; then
changequote([, ])dnl
        AC_MSG_RESULT([($CGAL_VERSION) yes])
      else
        AC_MSG_RESULT([($CGAL_VERSION) no])
        cgal=no
      fi
    fi

    if test "x$cgal" = xyes; then
      CGAL_LIBS="-lCGAL"
      AC_MSG_CHECKING([whether CGAL uses LEDA])
      if echo $CGAL_CXXFLAGS | grep -q -- -DCGAL_USE_LEDA; then
        CGAL_USES_LEDA=yes
        AC_MSG_RESULT([yes])
        CGAL_DEFINES="-DCGAL_USE_LEDA -DLEDA_PREFIX"
      else
        AC_MSG_RESULT([no])
        CGAL_USES_LEDA=no
      fi

      AC_MSG_CHECKING([whether CGAL uses GMP])
      if echo $CGAL_CXXFLAGS | grep -q -- -DCGAL_USE_GMP; then
        CGAL_USES_GMP=yes
        AC_MSG_RESULT([yes])
        CGAL_DEFINES="-DCGAL_USE_GMP $CGAL_DEFINES"
      else
        AC_MSG_RESULT([no])
        CGAL_USES_GMP=no
      fi

      CGAL_LIBS="$CGAL_LIBS -lm"

      CGAL_CXXFLAGS="-ftemplate-depth-50"

      AC_MSG_RESULT(CGAL_USES_LEDA=     $CGAL_USES_LEDA)
      AC_MSG_RESULT(CGAL_USES_GMP =     $CGAL_USES_GMP)
      AC_MSG_RESULT(CGAL_INCLDIR  =     $CGAL_INCLDIR)
      AC_MSG_RESULT(CGAL_LIBDIR   =     $CGAL_LIBDIR)
      AC_MSG_RESULT(CGAL_DEFINES  =     $CGAL_DEFINES)
      AC_MSG_RESULT(CGAL_CXXFLAGS =     $CGAL_CXXFLAGS)
      AC_MSG_RESULT(CGAL_LIBS     =     $CGAL_LIBS)
    fi

    if test "x$cgal" = xyes; then
      save_LIBS="$LIBS"
      LIBS="$LIBS -L$CGAL_LIBDIR"
      if test "x$CGAL_USES_LEDA" = xyes; then
        LIBS="-lL $LIBS -L$LEDA_LIBDIR"
      fi
      # if test "x$CGAL_USES_GMP" = xyes; then
      #   LIBS="-lgmp $LIBS $GMP_LIBDIR"
      # fi
      AC_CHECK_CXX_LIB(CGAL, ::CGAL::Cartesian<int>::Point_2, [#include <CGAL/Cartesian.h>], [::CGAL::Cartesian<int>::Point_2 P], [cgal=yes], [cgal=no], -I$CGAL_INCLDIR -I$CGAL_INCLCONFDIR)
      LIBS="$save_LIBS"
    fi

  fi
  AC_LANG_POP()

fi

if test "x$cgal" = xyes; then
  USE_CGAL=yes
  AC_DEFINE(HAVE_CGAL, 1, [Is defined if the CGAL library is available.])
  AC_DEFINE_UNQUOTED(CGAL_VERSION, $CGAL_VERSION, [The CGAL version number.])
changequote({, })dnl
  if ! echo $CGAL_VERSION | grep -q "^3.0"; then
changequote([, ])dnl
    AC_MSG_WARN(*****************************************************)
    AC_MSG_WARN(*** Warning: Your CGAL version is newer than the  ***)
    AC_MSG_WARN(*** supported versions. It may still work though. ***)
    AC_MSG_WARN(*****************************************************)
  fi
else
   if test "x$cgal_makefile" != xno; then
    AC_MSG_RESULT(No CGAL support. These are not the droids you want.)
  fi
  CGAL_INCLDIR=
  CGAL_LIBDIR=
  CGAL_RLIBDIR=
  CGAL_DEFINES=
  CGAL_CXXFLAGS=
  CGAL_LIBS=
fi

AC_SUBST(USE_CGAL)
CGAL_INC_DIR="${CGAL_INCLDIR} ${CGAL_INCLCONFDIR}"
AC_SUBST(CGAL_INC_DIR)
CGAL_LIB_DIR=${CGAL_LIBDIR}
AC_SUBST(CGAL_LIB_DIR)
CGAL_RLIB_DIR=${CGAL_RLIBDIR}
AC_SUBST(CGAL_RLIB_DIR)
AC_SUBST(CGAL_DEFINES)
AC_SUBST(CGAL_CXXFLAGS)
AC_SUBST(CGAL_LIBS)


BB_ENABLE_DOXYGEN

AC_SUBST(EXEEXT)
AC_SUBST(OBJEXT)
AC_SUBST(BATEXT)
AC_SUBST(MKINSTALLDIRS)
AC_SUBST(OOPSE)
AC_SUBST(OOPSE_HOME)
AC_SUBST(SUBDIRS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(FCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(PREPDEFFLAG)
AC_SUBST(F90_MODULE_NAMES)
AC_CONFIG_FILES([make/Makefile src/utils/Makefile src/applications/nanoRodBuilder/Makefile scripts/filepp], [chmod 0755 scripts/*])

AC_OUTPUT
