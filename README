OOPSE

OOPSE is an open-source Object-Oriented Parallel Simulation Engine.
It is primarily used to perform molecular dynamics simulations on
"strange" atom types that are not normally handled by other simulation
packages.  This includes atoms with orientational degrees of freedom
(point dipoles, sticky atoms), as well as transition metals under the
Embedded Atom Method (EAM) or Sutton-Chen (SC) potentials. 

Simulations are started in OOPSE using two files: 

  1) a C-based meta-data (.md) file, and 

  2) a modified XYZ format for initial coordinate and velocity information.

Detailed descriptions of the structures of these two files are 
available in the "doc" directory.  Sample simulations are 
available in the "samples" directory. 

What you need to compile and use OOPSE:

 1) Good C, C++ and Fortran95 compilers.  We've built and tested OOPSE
    on the following architecture & compiler combinations:

    Architecture                CC     CXX     F90    Notes
    -------------------------   ----   -----   -----  ----------------------
    ix86-pc-linux-gnu           icc    icpc    ifort  (Intel versions 7-9)
    powerpc-apple-darwin8.4.0   gcc    g++     xlf    (GNU v.4 / IBM XL v. 8.1)
    x86_64-unknown-linux-gnu    pgcc   pgCC    pgf95  (Portland Group v. 6.0)
    sparc-sun-solaris2.8        cc     CC      f95    (Sun ONE Studio 10)
    
    We've successfully compiled OOPSE with the Pathscale c, c++, and 
    Fortran95 compilers on the  x86_64-unknown-linux-gnu architecture,
    but a bug in the exception handling on these compilers causes
    OOPSE to abort (rather than providing a useful error message) when
    an error is found in the meta-data file.
  
    The GNU compilers, gcc and g++, work very well, but you will need to
    use a Fortran *95* compler for the fortran side of OOPSE, and
    pgf90 does not implement the required portions of the f95
    language.  Fortran77 and Fortran90 (i.e. g77 and pgf90) are *not*
    sufficient to compile the fortran portions of OOPSE.   Gfortran
    does not yet build our fortran code, but g95 might.  If you use
    one of these compilers, please let us know of any build or runtime
    errors.

 2) GNU make (also known as gmake).  Regular make won't work.  
    Really.  We've tried.  Don't bother with regular make.  
    Seriously.  You need GNU make.  Did we mention that you 
    need GNU make?

 3) Perl.  Compilation dependencies in Fortran95 are somewhat
    complicated, so the build process uses a perl script called
    filepp to do this job.  You need perl for filepp, so you
    need perl to build OOPSE.

 4) MPI is optional for the single processor version of OOPSE, 
    but is required if you want OOPSE to run in parallel. 

    We like MPICH-1.2.*.  Other implementations might work, but we
    haven't tried.  You can get MPICH here:
    http://www-unix.mcs.anl.gov/mpi/mpich/

INSTRUCTIONS

 1) Get, build, and test the required pieces above.
 2) ./configure  (or ./configure --with-mpi=/usr/local/mpich)
 3) make
 4) make install

That's it.
